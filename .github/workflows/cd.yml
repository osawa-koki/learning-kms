name: cd

on:
  workflow_dispatch:
  push:
    tags: [ v-* ]

jobs:
  cd:
    name: Deploy stack to AWS
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Configure AWS credentials
      id: creds
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Deploy CloudFormation stack
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: ${{ secrets.STACK_NAME }}
        template: ./template.yml
        no-fail-on-empty-changeset: "1"
  exec:
    name: Execute command
    runs-on: ubuntu-22.04
    needs: cd
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: yarn
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ./node_modules/
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-
      - name: Create dotenv
        run: |
          echo "KMS_KEY_ID=$(aws cloudformation describe-stacks --stack-name learning-kms --query "Stacks[].Outputs[?OutputKey=='KMSKeyArn'].OutputValue" --output text --no-cli-pager)" >> ./.env
      - name: Install dependencies
        run: yarn install --frozen-lockfile --non-interactive --production
      - name: Build
        run: yarn build
      - name: Run
        run: yarn start
